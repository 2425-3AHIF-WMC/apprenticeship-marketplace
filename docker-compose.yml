services:

  postgres:
    image: postgres:17
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cruddb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - florasCoolesNetzwerk

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cruddb
      POSTGRES_HOST: postgres
    ports:
      - "5000:5000"
    depends_on:
        postgres:
          condition: service_healthy
          restart: true
    networks:
      - florasCoolesNetzwerk
    volumes:
      - ./media:/app/media

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    restart: unless-stopped
    networks:
      - florasCoolesNetzwerk

volumes:
  pgdata:
  media:

networks:
  florasCoolesNetzwerk:
    driver: bridge
